<?xml version="1.0" encoding="UTF-8"?>
<FindBugsFilter>
<Match>
    <!-- This warns because the same constructor argument has a NonNull check in both subclass and superclass -->
    <Bug pattern="RCN_REDUNDANT_NULLCHECK_WOULD_HAVE_BEEN_A_NPE" />
</Match>
<Match>
    <!-- This warns when there's a null check on NonNull parameters.
         Given that we haven't enforced this strictly with AndroidX Nonnull,
         (which doesn't really do anything), we'll ignore this for now.
         Once we migrated everything to Lombok's Nonnull (which will throw an
         exception), we can remove this.
    -->
   <Bug pattern="RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE" />
 </Match>
<Match>
    <!-- This warns when there's a transient field in a serializable class -->
    <Bug pattern="SE_TRANSIENT_FIELD_NOT_RESTORED" />
</Match>
<Match>
    <!-- This warns when a field is never read. -->
    <Bug pattern="URF_UNREAD_FIELD" />
</Match>
<Match>
    <!-- Return value of method without side effect is ignored. -->
    <!-- Adding this primarily for CryptoFactoryTelemetryHelper where this shows up -->
    <Class name="com.microsoft.identity.common.java.opentelemetry.CryptoFactoryTelemetryHelper" />
    <Bug pattern="RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT" />
</Match>
<Match>
    <!-- Return value of method without side effect is ignored. -->
    <Package name="com.microsoft.identity.common.java.commands.*" />
    <Bug pattern="RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT" />
</Match>
    <Match>
        <!-- Spotbugs doesn't seem to work well with kotlin...
        https://github.com/spotbugs/spotbugs/issues/573 -->
        <Source name="~.*\.kt"/>
    </Match>
</FindBugsFilter>
